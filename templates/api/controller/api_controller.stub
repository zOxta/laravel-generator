<?php namespace $NAMESPACE_API_CONTROLLER$;

use App\Http\Controllers\ApiController;
use App\Http\Controllers\Controller;
use App\Utils\HttpStatusCode;
use Illuminate\Http\Request;

use $NAMESPACE_MODEL$\$MODEL_NAME$;

$DOC_CONTROLLER$
class $MODEL_NAME$APIController extends Controller
{
    protected $api;

    public function __construct(ApiController $api) { $this->api = $api; }

    $DOC_INDEX$
    public function index()
    {
        return $this->api->success('$MODEL_NAME_PLURAL_CAMEL$.index', $MODEL_NAME$::all()->toArray());
    }

    $DOC_STORE$
    public function store(Request $request)
    {
        $this->validate($request, $MODEL_NAME$::$createValidatorRules);

        $fields = $this->reformatFields($request->all());

        $created = $MODEL_NAME$::create($fields);

        return isset($created->Id)

            ? $this->api->success('$MODEL_NAME_PLURAL_CAMEL$.create', $created->toArray(), HttpStatusCode::HTTP_CREATED)

            : $this->api->error('$MODEL_NAME_PLURAL_CAMEL$.create', $created, HttpStatusCode::HTTP_BAD_REQUEST);
    }

    $DOC_SHOW$
    public function show(Request $request, $MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        return $this->api->success('$MODEL_NAME_PLURAL_CAMEL$.show', $$MODEL_NAME_CAMEL$->toArray());
    }

    $DOC_UPDATE$
    public function update(Request $request, $MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {

        $MODEL_NAME$::$updateValidatorRules['Email'] .= ",{$$MODEL_NAME_CAMEL$->Id}";

        $this->validate($request, $MODEL_NAME$::$updateValidatorRules);

        $fields = $this->reformatFields($request->all());

        $updated = $$MODEL_NAME_CAMEL$->update($fields);

        return $updated

            ? $this->api->success('$MODEL_NAME_PLURAL_CAMEL$.update', $$MODEL_NAME_CAMEL$->toArray(), HttpStatusCode::HTTP_OK)

            : $this->api->error('$MODEL_NAME_PLURAL_CAMEL$.update', $$MODEL_NAME_CAMEL$, HttpStatusCode::HTTP_BAD_REQUEST);

    }

    $DOC_DESTROY$
    public function destroy($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$->delete();

        return $this->api->success('$MODEL_NAME_PLURAL_CAMEL$.destroy', [], HttpStatusCode::HTTP_OK);
    }

    /**
     * Reformat certain fields in a certain way
     *
     * @param $fields
     *
     * @return mixed
     */
    private function reformatFields($fields)
    {

        foreach ($fields as $key => $value) {

            switch ($key) {
                # add any other formatting cases needed
                case 'PrimaryPhone':
                case 'SecondaryPhone':
                     $fields[$key] = '1 (' . substr($value, 0, 3) . ') ' . substr($value, 3, 3) . '-' . substr($value, 6);
                    break;
            }

        }

        return $fields;
    }
}